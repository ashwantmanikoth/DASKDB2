{'ftMode': 'NONE', 'logicalRa': 'MyriaStore(public:adhoc:OUTPUT)[MyriaLimit(5)[MyriaSplitConsumer[MyriaSplitProducer[MyriaInMemoryOrderBy(revenue+)[MyriaCollectConsumer[MyriaCollectProducer(@None)[MyriaLimit(5)[MyriaInMemoryOrderBy(revenue+)[MyriaApply(l_orderkey=$0,revenue=$1)[MyriaSplitConsumer[MyriaSplitProducer[MyriaGroupBy($0; SUM($1))[MyriaApply(l_orderkey=$0,_COLUMN1_=($1 * (1 - $2)))[MyriaSplitConsumer[MyriaSplitProducer[MyriaSymmetricHashJoin(($1 = $0); $1,$2,$3)[MyriaShuffleConsumer[MyriaShuffleProducer(h($0))[MyriaApply(o_orderkey=$0)[MyriaSelect(($1 >= "date_1995-01-01"))[MyriaScan(public:adhoc:orders)]]]],MyriaShuffleConsumer[MyriaShuffleProducer(h($0))[MyriaScan(public:adhoc:lineitem)]]]]]]]]]]]]]]]]]]]', 'language': 'myrial', 'rawQuery': 'Sequence[Store(public:adhoc:OUTPUT)[MyriaLimit(5)[MyriaInMemoryOrderBy(revenue+)[MyriaCollectConsumer[MyriaCollectProducer(@None)[MyriaLimit(5)[MyriaInMemoryOrderBy(revenue+)[MyriaApply(l_orderkey=$0,revenue=$1)[MyriaSplitConsumer[MyriaSplitProducer[MyriaGroupBy($0; SUM($1))[MyriaApply(l_orderkey=$0,_COLUMN1_=($1 * (1 - $2)))[MyriaSplitConsumer[MyriaSplitProducer[MyriaSymmetricHashJoin(($1 = $0); $1,$2,$3)[MyriaShuffleConsumer[MyriaShuffleProducer(h($0))[MyriaApply(o_orderkey=$0)[MyriaSelect(($1 >= "date_1995-01-01"))[MyriaScan(public:adhoc:orders)]]]],MyriaShuffleConsumer[MyriaShuffleProducer(h($0))[MyriaScan(public:adhoc:lineitem)]]]]]]]]]]]]]]]]]]', 'plan': {'fragments': [{'operators': [{'opName': 'MyriaSplitConsumer', 'opType': 'LocalMultiwayConsumer', 'opId': 0, 'argOperatorId': 1}, {'opName': 'MyriaLimit(5)', 'opType': 'Limit', 'numTuples': 5, 'opId': 2, 'argChild': 0}, {'opType': 'DbInsert', 'argChild': 2, 'argOverwriteTable': True, 'distributeFunction': {'type': 'RoundRobin'}, 'relationKey': {'userName': 'public', 'relationName': 'OUTPUT', 'programName': 'adhoc'}, 'opName': 'MyriaStore(public:adhoc:OUTPUT)', 'opId': 3}]}, {'operators': [{'opName': 'MyriaCollectConsumer', 'opType': 'CollectConsumer', 'opId': 4, 'argOperatorId': 5}, {'opType': 'InMemoryOrderBy', 'argChild': 4, 'argAscending': (True,), 'opId': 6, 'opName': 'MyriaInMemoryOrderBy(revenue+)', 'argSortColumns': ('revenue',)}, {'opName': 'MyriaSplitProducer', 'opType': 'LocalMultiwayProducer', 'opId': 1, 'argChild': 6}]}, {'operators': [{'opName': 'MyriaSplitConsumer', 'opType': 'LocalMultiwayConsumer', 'opId': 7, 'argOperatorId': 8}, {'emitExpressions': [{'outputName': 'l_orderkey', 'rootExpressionOperator': {'type': 'VARIABLE', 'columnIdx': 0}}, {'outputName': 'revenue', 'rootExpressionOperator': {'type': 'VARIABLE', 'columnIdx': 1}}], 'opName': 'MyriaApply(l_orderkey=$0,revenue=$1)', 'opType': 'Apply', 'opId': 9, 'argChild': 7}, {'opType': 'InMemoryOrderBy', 'argChild': 9, 'argAscending': (True,), 'opId': 10, 'opName': 'MyriaInMemoryOrderBy(revenue+)', 'argSortColumns': ('revenue',)}, {'opName': 'MyriaLimit(5)', 'opType': 'Limit', 'numTuples': 5, 'opId': 11, 'argChild': 10}, {'opName': 'MyriaCollectProducer(@None)', 'opType': 'CollectProducer', 'opId': 5, 'argChild': 11}]}, {'operators': [{'opName': 'MyriaSplitConsumer', 'opType': 'LocalMultiwayConsumer', 'opId': 12, 'argOperatorId': 13}, {'emitExpressions': [{'outputName': 'l_orderkey', 'rootExpressionOperator': {'type': 'VARIABLE', 'columnIdx': 0}}, {'outputName': '_COLUMN1_', 'rootExpressionOperator': {'right': {'right': {'type': 'VARIABLE', 'columnIdx': 2}, 'type': 'MINUS', 'left': {'valueType': 'LONG_TYPE', 'type': 'CONSTANT', 'value': '1'}}, 'type': 'TIMES', 'left': {'type': 'VARIABLE', 'columnIdx': 1}}}], 'opName': 'MyriaApply(l_orderkey=$0,_COLUMN1_=($1 * (1 - $2)))', 'opType': 'Apply', 'opId': 14, 'argChild': 12}, {'opType': 'Aggregate', 'argChild': 14, 'argGroupFields': [0], 'aggregators': [{'column': 1, 'aggOps': ['SUM'], 'type': 'Primitive'}], 'opName': 'MyriaGroupBy($0; SUM($1))', 'opId': 15}, {'opName': 'MyriaSplitProducer', 'opType': 'LocalMultiwayProducer', 'opId': 8, 'argChild': 15}]}, {'operators': [{'opName': 'MyriaShuffleConsumer', 'opType': 'ShuffleConsumer', 'opId': 16, 'argOperatorId': 17}, {'opName': 'MyriaShuffleConsumer', 'opType': 'ShuffleConsumer', 'opId': 18, 'argOperatorId': 19}, {'opId': 20, 'argSelect2': [0, 1, 2], 'argSelect1': [], 'opType': 'SymmetricHashJoin', 'argOrder': 'ALTERNATE', 'argColumns1': [0], 'argColumns2': [0], 'argColumnNames': ['l_orderkey', 'l_extendedprice', 'l_discount'], 'argChild2': '16', 'argChild1': '18', 'opName': 'MyriaSymmetricHashJoin(($1 = $0); $1,$2,$3)'}, {'opName': 'MyriaSplitProducer', 'opType': 'LocalMultiwayProducer', 'opId': 13, 'argChild': 20}]}, {'operators': [{'relationKey': {'userName': 'public', 'relationName': 'orders', 'programName': 'adhoc'}, 'opType': 'TableScan', 'debroadcast': False, 'opId': 21, 'opName': 'MyriaScan(public:adhoc:orders)'}, {'opId': 22, 'argPredicate': {'rootExpressionOperator': {'right': {'valueType': 'STRING_TYPE', 'type': 'CONSTANT', 'value': 'date_1995-01-01'}, 'type': 'GTEQ', 'left': {'type': 'VARIABLE', 'columnIdx': 1}}}, 'opType': 'Filter', 'opName': 'MyriaSelect(($1 >= "date_1995-01-01"))', 'argChild': 21}, {'emitExpressions': [{'outputName': 'o_orderkey', 'rootExpressionOperator': {'type': 'VARIABLE', 'columnIdx': 0}}], 'opName': 'MyriaApply(o_orderkey=$0)', 'opType': 'Apply', 'opId': 23, 'argChild': 22}, {'opId': 19, 'opName': 'MyriaShuffleProducer(h($0))', 'opType': 'ShuffleProducer', 'distributeFunction': {'type': 'Hash', 'indexes': [0]}, 'argChild': 23}]}, {'operators': [{'relationKey': {'userName': 'public', 'relationName': 'lineitem', 'programName': 'adhoc'}, 'opType': 'TableScan', 'debroadcast': False, 'opId': 24, 'opName': 'MyriaScan(public:adhoc:lineitem)'}, {'opId': 17, 'opName': 'MyriaShuffleProducer(h($0))', 'opType': 'ShuffleProducer', 'distributeFunction': {'type': 'Hash', 'indexes': [0]}, 'argChild': 24}]}], 'type': 'SubQuery'}}
